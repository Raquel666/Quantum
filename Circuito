q = QuantumRegister(4)
c = ClassicalRegister(4)
circuito = QuantumCircuit(q,c)
circuito.barrier(q[0],q[1]);
circuito.h(q[2]);
circuito.x(q[3]);
circuito.barrier(q[0],q[1]);
circuito.h(q[3]);
circuito.barrier(q[0],q[1]);
circuito.cz(q[2],q[3]);
circuito.barrier(q[0],q[1]);
circuito.x(q[2]);
circuito.x(q[3]);
circuito.barrier(q[0],q[1]);
circuito.h(q[2]);
circuito.h(q[3]);
circuito.barrier(q[0],q[1]);
circuito.z(q[2]);
circuito.z(q[3]);
circuito.barrier(q[0],q[1]);
circuito.cz(q[2],q[3]);
circuito.barrier(q[0],q[1]);
circuito.h(q[2]);
circuito.h(q[3]);
circuito.x(q[0]);
circuito.x(q[1]);
circuito.barrier(q[2],q[3]);
circuito.z(q[0]);
circuito.z(q[1]);
circuito.z(q[2]);
circuito.z(q[3]);
circuito.cz(q[0],q[1]);
circuito.cz([2],q[3]);
circuito.barrier(q[0]);
circuito.cz(q[1],q[2]);
circuito.barrier(q[3]);
circuito.z(q[0]);
circuito.z(q[1]);
circuito.z(q[2]);
circuito.z(q[3]);
circuito.cz(q[0],q[1]);
circuito.cz(q[2],q[3]);
circuito.barrier(q[0]);
circuito.cz(q[1],q[2]);
circuito.barrier(q[3]);


circuito.measure(q,c)
circuito.draw(output='mpl')
